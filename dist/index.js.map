{"version":3,"sources":["../node_modules/fastify-plugin/lib/getPluginName.js","../node_modules/fastify-plugin/lib/toCamelCase.js","../node_modules/fastify-plugin/plugin.js","../src/wsPlugin.ts"],"sourcesContent":["'use strict'\n\nconst fpStackTracePattern = /at\\s{1}(?:.*\\.)?plugin\\s{1}.*\\n\\s*(.*)/\nconst fileNamePattern = /(\\w*(\\.\\w*)*)\\..*/\n\nmodule.exports = function getPluginName (fn) {\n  if (fn.name.length > 0) return fn.name\n\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 10\n  try {\n    throw new Error('anonymous function')\n  } catch (e) {\n    Error.stackTraceLimit = stackTraceLimit\n    return extractPluginName(e.stack)\n  }\n}\n\nfunction extractPluginName (stack) {\n  const m = stack.match(fpStackTracePattern)\n\n  // get last section of path and match for filename\n  return m ? m[1].split(/[/\\\\]/).slice(-1)[0].match(fileNamePattern)[1] : 'anonymous'\n}\nmodule.exports.extractPluginName = extractPluginName\n","'use strict'\n\nmodule.exports = function toCamelCase (name) {\n  if (name[0] === '@') {\n    name = name.slice(1).replace('/', '-')\n  }\n  return name.replace(/-(.)/g, function (match, g1) {\n    return g1.toUpperCase()\n  })\n}\n","'use strict'\n\nconst getPluginName = require('./lib/getPluginName')\nconst toCamelCase = require('./lib/toCamelCase')\n\nlet count = 0\n\nfunction plugin (fn, options = {}) {\n  let autoName = false\n\n  if (fn.default !== undefined) {\n    // Support for 'export default' behaviour in transpiled ECMAScript module\n    fn = fn.default\n  }\n\n  if (typeof fn !== 'function') {\n    throw new TypeError(\n      `fastify-plugin expects a function, instead got a '${typeof fn}'`\n    )\n  }\n\n  if (typeof options === 'string') {\n    options = {\n      fastify: options\n    }\n  }\n\n  if (\n    typeof options !== 'object' ||\n    Array.isArray(options) ||\n    options === null\n  ) {\n    throw new TypeError('The options object should be an object')\n  }\n\n  if (options.fastify !== undefined && typeof options.fastify !== 'string') {\n    throw new TypeError(`fastify-plugin expects a version string, instead got '${typeof options.fastify}'`)\n  }\n\n  if (!options.name) {\n    autoName = true\n    options.name = getPluginName(fn) + '-auto-' + count++\n  }\n\n  fn[Symbol.for('skip-override')] = options.encapsulate !== true\n  fn[Symbol.for('fastify.display-name')] = options.name\n  fn[Symbol.for('plugin-meta')] = options\n\n  // Faux modules support\n  if (!fn.default) {\n    fn.default = fn\n  }\n\n  // TypeScript support for named imports\n  // See https://github.com/fastify/fastify/issues/2404 for more details\n  // The type definitions would have to be update to match this.\n  const camelCase = toCamelCase(options.name)\n  if (!autoName && !fn[camelCase]) {\n    fn[camelCase] = fn\n  }\n\n  return fn\n}\n\nmodule.exports = plugin\nmodule.exports.default = plugin\nmodule.exports.fastifyPlugin = plugin\n","import fp from 'fastify-plugin';\r\n// import type { FastifyInstance, FastifyPluginAsync, FastifyRequest } from 'fastify';\r\n// import type { FastifyInstance, FastifyPluginCallback, FastifyRequest } from 'fastify';\r\nimport type { FastifyInstance, FastifyPluginAsync, FastifyPluginCallback, FastifyRequest } from 'fastify';\r\nimport { WebSocketServer, WebSocket } from 'ws';\r\nimport { URL } from 'url';\r\n\r\n// ---- Types -----------------------------------------------------------------\r\n\r\ntype OriginPolicy =\r\n  | string[]\r\n  | Set<string>\r\n  | ((origin: string | undefined, req: FastifyRequest) => boolean | Promise<boolean>);\r\n\r\nexport interface WSVerifyInfo {\r\n  headers: Record<string, string | string[] | undefined>;\r\n  query: URLSearchParams;\r\n  cookies: Record<string, string>;\r\n  params: Record<string, any>;\r\n  path: string;\r\n  origin?: string;\r\n  protocols: string[];\r\n  ip?: string;\r\n}\r\n\r\nexport type WSVerifyFn = (this: FastifyInstance, req: FastifyRequest, info: WSVerifyInfo)\r\n  => boolean | void | Promise<boolean | void>;\r\n\r\nexport interface RouteWSOptions {\r\n  websocket?: boolean;\r\n  maxPayload?: number;\r\n  wsOptions?: ConstructorParameters<typeof WebSocketServer>[0];\r\n  jwtVerify?: boolean;\r\n  extractToken?: (req: FastifyRequest, info: WSVerifyInfo) => string | Promise<string>;\r\n  allowedOrigins?: OriginPolicy;\r\n  wsVerify?: WSVerifyFn | WSVerifyFn[];\r\n  maxConnections?: number;\r\n  idleTimeoutMs?: number;\r\n  heartbeatIntervalMs?: number;\r\n  selectProtocol?: (protocols: string[], req: FastifyRequest) => string | false;\r\n  highWaterMarkBytes?: number;\r\n}\r\n\r\ndeclare module 'fastify' {\r\n  interface FastifyInstance {\r\n    setWebSocketOriginPolicy(policy: OriginPolicy): void;\r\n    wsBroadcast(path: string, data: string | Buffer | ArrayBufferView, opts?: { binary?: boolean; filter?: (ws: WebSocket) => boolean }): number;\r\n    getWebSocketRoute(path: string): RouteContext | undefined;\r\n    _wsOriginPolicy?: OriginPolicy;\r\n    _wsRoutes?: Map<string, RouteContext>;\r\n  }\r\n\r\n  interface RouteShorthandOptions {\r\n    websocket?: boolean;\r\n    maxPayload?: number;\r\n    wsOptions?: ConstructorParameters<typeof WebSocketServer>[0];\r\n    jwtVerify?: boolean;\r\n    extractToken?: (req: FastifyRequest, info: WSVerifyInfo) => string | Promise<string>;\r\n    allowedOrigins?: OriginPolicy;\r\n    wsVerify?: WSVerifyFn | WSVerifyFn[];\r\n    maxConnections?: number;\r\n    idleTimeoutMs?: number;\r\n    heartbeatIntervalMs?: number;\r\n    selectProtocol?: (protocols: string[], req: FastifyRequest) => string | false;\r\n    highWaterMarkBytes?: number;\r\n  }\r\n}\r\n\r\nexport interface RouteContext {\r\n  path: string;\r\n  wss: WebSocketServer;\r\n  clients: Set<WebSocket>;\r\n  options: Required<Pick<RouteWSOptions, 'maxPayload'>> & Partial<RouteWSOptions>;\r\n  heartbeatTimer?: NodeJS.Timer;\r\n}\r\n\r\n// ---- Utils ------------------------------------------------------------------\r\n\r\nfunction writeHttpAndDestroy(sock: any, status: number, reason?: string) {\r\n  try {\r\n    const msg = reason ? ` ${reason}` : '';\r\n    sock.write(`HTTP/1.1 ${status}${msg}\\r\\nConnection: close\\r\\n\\r\\n`);\r\n  } catch {}\r\n  try { sock.destroy(); } catch {}\r\n}\r\n\r\nfunction parseCookiesHeader(header: string | undefined): Record<string, string> {\r\n  if (!header) return {};\r\n  const out: Record<string, string> = {};\r\n  for (const part of header.split(';')) {\r\n    const [k, ...rest] = part.split('=');\r\n    if (!k) continue;\r\n    out[k.trim()] = decodeURIComponent(rest.join('=').trim());\r\n  }\r\n  return out;\r\n}\r\n\r\nfunction asSet(arrOrSet?: string[] | Set<string>): Set<string> | undefined {\r\n  if (!arrOrSet) return undefined;\r\n  return arrOrSet instanceof Set ? arrOrSet : new Set(arrOrSet);\r\n}\r\n\r\nasync function originAllowed(policy: OriginPolicy | undefined, origin: string | undefined, req: FastifyRequest) {\r\n  if (!policy) return true;\r\n  if (typeof policy === 'function') return !!(await policy(origin, req));\r\n  const set = asSet(policy);\r\n  if (!origin) return false;\r\n  return set!.has(origin);\r\n}\r\n\r\nfunction attachSafeSend(ws: WebSocket, highWaterMarkBytes?: number) {\r\n  (ws as any).safeSend = (data: any, opts?: { binary?: boolean }) => {\r\n    if (ws.readyState !== ws.OPEN) return false;\r\n    if (typeof highWaterMarkBytes === 'number' && ws.bufferedAmount > highWaterMarkBytes) return false;\r\n    ws.send(data, { binary: opts?.binary });\r\n    return true;\r\n  };\r\n}\r\n\r\n// ---- Plugin -----------------------------------------------------------------\r\n\r\nconsole.log('wsPlugin module load start:');\r\n\r\nfunction syncDelay(ms: number) {\r\n  const start = Date.now();\r\n  let now = start;\r\n  while (now - start < ms) {\r\n    now = Date.now();\r\n  }\r\n}\r\n\r\nconst wsPlugin: FastifyPluginCallback = function (fastify, pluginOpts, pluginDone) {\r\n  fastify.decorate('_wsRoutes', new Map<string, RouteContext>());\r\n  fastify.decorate('setWebSocketOriginPolicy', function (policy: OriginPolicy) {\r\n    this._wsOriginPolicy = policy;\r\n  });\r\n  fastify.decorate('getWebSocketRoute', function (path: string) {\r\n    console.log('getWebSocketRoute called.\\n\\t this._wsRoutes.length: ', this._wsRoutes?.size);\r\n    return this._wsRoutes!.get(path);\r\n  });\r\n  fastify.decorate('wsBroadcast', function (path: string, data: any, opts?: { binary?: boolean; filter?: (ws: WebSocket) => boolean }) {\r\n    const ctx = this._wsRoutes!.get(path);\r\n    if (!ctx) return 0;\r\n    let sent = 0;\r\n    for (const ws of ctx.clients) {\r\n      if (ws.readyState !== ws.OPEN) continue;\r\n      if (opts?.filter && !opts.filter(ws)) continue;\r\n      try { ws.send(data, { binary: !!opts?.binary }); sent++; } catch {}\r\n    }\r\n    return sent;\r\n  });\r\n\r\n  fastify.addHook('onClose', (instance, done) => {\r\n    const map = instance._wsRoutes!;\r\n    for (const ctx of map.values()) {\r\n      try { clearInterval(ctx.heartbeatTimer as any); } catch {}\r\n      try { ctx.wss.close(); } catch {}\r\n      ctx.clients.clear();\r\n    }\r\n    map.clear();\r\n    done();\r\n  });\r\n\r\n  // process websocket routes\r\n  const processRoute = (routeOpts: any) => {\r\n    if (!routeOpts.websocket) return;\r\n    if(routeOpts.method != 'GET' && routeOpts.method != 'HEAD'){\r\n      throw new Error('Websockets only work on GET and HEAD methods.');\r\n    };\r\n\r\n    const fullPath = routeOpts.path ?? routeOpts.url;\r\n    const userHandler = routeOpts.handler as (ws: WebSocket, req: FastifyRequest) => void;\r\n\r\n    const rtOpts: RouteWSOptions = routeOpts;\r\n    const maxPayload = rtOpts.maxPayload ?? 100 * 1024;\r\n    const highWaterMarkBytes = rtOpts.highWaterMarkBytes ?? 512 * 1024;\r\n    const heartbeatIntervalMs = rtOpts.heartbeatIntervalMs ?? 0;\r\n    const selectProtocol = rtOpts.selectProtocol;\r\n\r\n    const wss = new WebSocketServer({\r\n      noServer: true,\r\n      maxPayload,\r\n      handleProtocols: selectProtocol ? (protocols: Set<string>, rawReq: any) => {\r\n        const arr = Array.from(protocols);\r\n        const req = (rawReq as any).__fastifyRequest || rawReq;\r\n        const chosen = selectProtocol(arr, req);\r\n        return chosen || false;\r\n      } : undefined,\r\n      ...rtOpts.wsOptions,\r\n    });\r\n\r\n    const ctx: RouteContext = {\r\n      path: fullPath,\r\n      wss,\r\n      clients: new Set<WebSocket>(),\r\n      options: { maxPayload, ...rtOpts },\r\n    };\r\n\r\n    if (heartbeatIntervalMs > 0) {\r\n      ctx.heartbeatTimer = setInterval(() => {\r\n        for (const ws of ctx.clients) {\r\n          const anyWs = ws as any;\r\n          if (anyWs._isAlive === false) {\r\n            try { ws.terminate(); } catch { }\r\n            continue;\r\n          }\r\n          anyWs._isAlive = false;\r\n          try { ws.ping(); } catch { }\r\n        }\r\n      }, heartbeatIntervalMs).unref?.();\r\n    }\r\n\r\n    fastify._wsRoutes!.set(fullPath, ctx);\r\n\r\n    routeOpts.handler = async function (req: FastifyRequest, reply: any) {\r\n      reply.hijack();\r\n\r\n      const origin = (req.headers.origin as string | undefined) || undefined;\r\n      const ip = (req.raw.socket.remoteAddress as string | undefined) || undefined;\r\n      const base = `http://${req.headers.host || 'localhost'}`;\r\n      const url = new URL(req.url, base);\r\n      const query = url.searchParams;\r\n\r\n      const cookies = (req as any).cookies ?? parseCookiesHeader(req.headers.cookie as string | undefined);\r\n      const protocols = ((req.headers['sec-websocket-protocol'] as string | undefined)?.split(',').map(s => s.trim()).filter(Boolean)) ?? [];\r\n\r\n      const info: WSVerifyInfo = {\r\n        headers: req.headers as any,\r\n        query,\r\n        cookies,\r\n        params: (req.params as any) ?? {},\r\n        path: fullPath,\r\n        origin,\r\n        protocols,\r\n        ip,\r\n      };\r\n\r\n      const policy = rtOpts.allowedOrigins ?? fastify._wsOriginPolicy;\r\n      if (!(await originAllowed(policy, origin, req))) {\r\n        writeHttpAndDestroy(req.raw.socket, 403, 'Forbidden');\r\n        return;\r\n      }\r\n\r\n      const verifyFns: WSVerifyFn[] = Array.isArray(rtOpts.wsVerify) ? rtOpts.wsVerify : (rtOpts.wsVerify ? [rtOpts.wsVerify] : []);\r\n      for (const verify of verifyFns) {\r\n        try {\r\n          const res = await verify.call(this, req, info);\r\n          if (res === false) {\r\n            writeHttpAndDestroy(req.raw.socket, 403, 'Forbidden');\r\n            return;\r\n          }\r\n        } catch {\r\n          writeHttpAndDestroy(req.raw.socket, 400, 'Bad Request');\r\n          return;\r\n        }\r\n      }\r\n\r\n      if ((fastify as any).jwt && rtOpts.jwtVerify !== false) {\r\n        try {\r\n          const token = rtOpts.extractToken\r\n            ? await rtOpts.extractToken(req, info)\r\n            : (() => {\r\n              const auth = (req.headers.authorization as string | undefined) || '';\r\n              if (auth.startsWith('Bearer ')) return auth.slice(7);\r\n              if (query.has('token')) return query.get('token')!;\r\n              if (cookies.token) return cookies.token;\r\n              return '';\r\n            })();\r\n          if (!token) throw new Error('No token');\r\n          (req as any).user = await (fastify as any).jwt.verify(token);\r\n        } catch {\r\n          writeHttpAndDestroy(req.raw.socket, 401, 'Unauthorized');\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (typeof rtOpts.maxConnections === 'number' && ctx.clients.size >= rtOpts.maxConnections) {\r\n        writeHttpAndDestroy(req.raw.socket, 503, 'Service Unavailable');\r\n        return;\r\n      }\r\n\r\n      (req.raw as any).__fastifyRequest = req;\r\n\r\n      wss.handleUpgrade(req.raw, req.raw.socket, Buffer.alloc(0), (ws: WebSocket) => {\r\n        ctx.clients.add(ws);\r\n\r\n        (ws as any).user = (req as any).user;\r\n        (ws as any).params = req.params;\r\n        (ws as any).query = Object.fromEntries(query.entries());\r\n        (ws as any).ip = ip;\r\n        (ws as any)._isAlive = true;\r\n\r\n        attachSafeSend(ws, highWaterMarkBytes);\r\n\r\n        let idleTimer: NodeJS.Timeout | undefined;\r\n        const idleMs = rtOpts.idleTimeoutMs;\r\n        const resetIdle = () => {\r\n          if (!idleMs) return;\r\n          if (idleTimer) clearTimeout(idleTimer);\r\n          idleTimer = setTimeout(() => {\r\n            try { ws.close(1001, 'Idle timeout'); } catch { }\r\n          }, idleMs).unref?.();\r\n        };\r\n        resetIdle();\r\n\r\n        ws.on('pong', () => { (ws as any)._isAlive = true; });\r\n        ws.on('message', () => resetIdle());\r\n        ws.on('close', () => {\r\n          ctx.clients.delete(ws);\r\n          try { if (idleTimer) clearTimeout(idleTimer); } catch { }\r\n          (ws as any).user = undefined;\r\n          (ws as any).params = undefined;\r\n          (ws as any).query = undefined;\r\n        });\r\n        ws.on('error', () => { });\r\n\r\n        userHandler(ws, req);\r\n      });\r\n    };\r\n  // });\r\n  };\r\n\r\n  fastify.addHook('onRoute', processRoute);\r\n\r\n  pluginDone();\r\n};\r\n\r\nexport default fp(wsPlugin, { \r\n  name: 'fastify-ws-native',\r\n  // fastify: '5.x'\r\n});\r\n// export default wsPlugin;\r\n"],"mappings":"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","names":["fp"]}